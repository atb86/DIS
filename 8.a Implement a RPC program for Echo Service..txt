Specification file
program echo_prg{
version echo_ver{
string echo(string)=1;
}=1;
}=0x20000021;





Client:

#include "echo.h"
void
echo_prg_1(char *host)
{
CLIENT *clnt;
char * *result_1;
char * echo_1_arg;
#ifndef DEBUG
clnt = clnt_create (host, echo_prg, echo_ver, "udp");
if (clnt == NULL) {
clnt_pcreateerror (host);
exit (1);
}
#endif /* DEBUG */

//code goes down after this

echo_1_arg=(char*)malloc(sizeof(char)*25);
printf("\nEnter a message:");
scanf("%s",echo_1_arg);
//*result_1=(char*)malloc(sizeof(char)*25);

//end of edit

result_1 = echo_1(&echo_1_arg, clnt);
if (result_1 == (char **) NULL) {
clnt_perror (clnt, "call failed");
}

//add print statement here
printf("result=%s",*result_1);
#ifndef DEBUG
clnt_destroy (clnt);
#endif /* DEBUG */
}
int
main (int argc, char *argv[])
{
char *host;
if (argc < 2) {
printf ("usage: %s server_host\n", argv[0]);
exit (1);
}
host = argv[1];
echo_prg_1 (host);
exit (0);
}




Server
#include "echo.h"
#include<string.h>
char **
echo_1_svc(char **argp, struct svc_req *rqstp)
{
static char * result;
//result=malloc(25);
result=(char*)malloc(sizeof(char)*25);
strcpy(result,*argp);
return &result;
}